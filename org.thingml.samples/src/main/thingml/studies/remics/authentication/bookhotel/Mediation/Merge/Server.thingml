// 
// (c) SINTEF 2012
//
// Define the server 
// 
// by Runze Hao (haoshaochi@gmail.com)
//
import "Message.thingml"

thing Server includes MergeMessage{

	readonly property roomRequest : String = "rRequest"
    readonly property ID : String = "inputID"


	provided port Toclient {
		receives rRequest,inputID,rSpM1
		sends rReply,idReply,rSpM1_re
	}
    
	
	statechart Authentication init Ready {
	
        //Waiting state for Booking room Request
		state Ready {
			on entry do 
                print "Server side: Ready.."
            end
            internal
                event e :Toclient?rSpM1
				action do
                    print"Server side: receive "+e.msg+"|"+e.msg1+"|"+e.msg2+"|"+e.msg3
                    Toclient!rSpM1_re(true)
                end      
            internal
				event e :Toclient?rRequest
				guard e.msg == roomRequest
				action Toclient!rReply("true")
				
			transition -> Finish 
				event e: Toclient?rRequest
				guard not (e.msg == roomRequest) 
				action Toclient!rReply("false")

            transition -> Finish
                event e: Toclient?inputID
                guard not(e.msg == ID)
                action do
                    print"Server side: deny!! receive "+e.msg
                end
                
            internal
                event e : Toclient?inputID
                guard e.msg == ID
                action do
                    print"Server side: receive "+e.msg
                    Toclient!idReply(true)
                end
		}
        
		state Finish {
			on entry print "finish"
            transition -> Ready
            
	}
}


}

thing FakeServer includes MergeMessage
@mock "true" {
	provided port Toclient {
		receives rRequest,inputID,rSpM1
		sends rReply,idReply,rSpM1_re
	}
}